<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.Entity.InformationSchema</name>
    </assembly>
    <members>
        <member name="T:System.Data.Entity.InformationSchema.UniqueKey">
            <summary>
            Represents the unique key of a table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.UniqueKey.Name">
            <summary>
            Gets the name of the unique key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.UniqueKey.Columns">
            <summary>
            Columns that make up the unique key.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.Column">
            <summary>
            Represents a colum
            </summary>
            <nuget id="System.Data.Entity.InformationSchema" />
        </member>
        <member name="M:System.Data.Entity.InformationSchema.Column.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.InformationSchema.Column"/> class.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.Table">
            <summary>
            Gets the table this column belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.Name">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.Position">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.DefaultValue">
            <summary>
            Default value of the column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.IsNullable">
            <summary>
            Nullability of the column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.MaxLength">
            <summary>
            Maximum length, in characters, for binary data, character data, or text and image data.
            -1 for xml and large-value type data. Otherwise, NULL is returned. 
            </summary>
            <remarks>
            For more information, see Data Types (Transact-SQL) (http://msdn.microsoft.com/en-us/library/ms187752).
            </remarks>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.OctetLength">
            <summary>
            Maximum length, in bytes, for binary data, character data, or text and image data.
            -1 for xml and large-value type data. Otherwise, NULL is returned. 
            </summary>
            <remarks>
            For more information, see Data Types (Transact-SQL) (http://msdn.microsoft.com/en-us/library/ms187752).
            </remarks>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.NumericPrecision">
            <summary>
            Precision of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.NumericPrecisionRadix">
            <summary>
            Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.NumericScale">
            <summary>
            Scale of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.DateTimePrecision">
            <summary>
            Subtype code for datetime and ISO interval data types. For other data types, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.CharacterSet">
            <summary>
            The character set information if this column is character data or text data type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.Collation">
            <summary>
            The collation information if the column is character data or text data type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Column.Domain">
            <summary>
            If the column is a user-defined data type, returns the information of the data type.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.Collation">
            <summary>
            Represents the collation information of a column if it is of character or text data type.
            </summary>
            <nuget id="System.Data.Entity.InformationSchema" />
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Collation.Catalog">
            <summary>
            Always returns NULL. (for T-SQL)
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Collation.Schema">
            <summary>
            Always returns NULL. (for T-SQL)
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Collation.Name">
            <summary>
            Returns the unique name for the collation if the column is character data or text data type. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.PrimaryKey">
            <summary>
            Represents the primary key of a table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.PrimaryKey.Name">
            <summary>
            Gets the name of the primary key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.PrimaryKey.Columns">
            <summary>
            Columns that make up the primary key.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.InformationSchemaContext">
            <summary>
            Allows inspecting the standard INFORMATION_SCHEMA views on supported databases through Entity Framework
            </summary>
            <nuget id="System.Data.Entity.InformationSchema" />
        </member>
        <member name="M:System.Data.Entity.InformationSchema.InformationSchemaContext.#cctor">
            <summary>
            Sets the initializer for this context to null, as we never create 
            the schema views.
            </summary>
        </member>
        <member name="M:System.Data.Entity.InformationSchema.InformationSchemaContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.InformationSchema.InformationSchemaContext"/> class.
            </summary>
            <param name="nameOrConnectionString">Either the database name or a connection string.</param>
        </member>
        <member name="M:System.Data.Entity.InformationSchema.InformationSchemaContext.#ctor(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
             Constructs a new context instance using the existing connection to connect to a database.
            </summary>
            <param name="existingConnection">An existing connection to use for the new context.</param>
            <param name="contextOwnsConnection">If set to true the connection is disposed when the context is disposed, otherwise
            the caller must dispose the connection.</param>
        </member>
        <member name="M:System.Data.Entity.InformationSchema.InformationSchemaContext.#ctor(System.Data.Objects.ObjectContext,System.Boolean)">
            <summary>
            Constructs a new context instance around an existing ObjectContext.
            </summary>
            <param name="objectContext">An existing ObjectContext to wrap with the new context.</param>
            <param name="dbContextOwnsObjectContext">If set to true the ObjectContext is disposed when the DbContext is disposed,
            otherwise the caller must dispose the connection.</param>
        </member>
        <member name="M:System.Data.Entity.InformationSchema.InformationSchemaContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
            Customizes the default mappings.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.InformationSchemaContext.Tables">
            <summary>
            Gets the tables in the database.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.InformationSchemaContext.Views">
            <summary>
            Gets the views in the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.Table">
            <summary>
            Represents a table in the standard information schema.
            </summary>
        </member>
        <member name="M:System.Data.Entity.InformationSchema.Table.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.InformationSchema.Table"/> class.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.Catalog">
            <summary>
            Table qualifier.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.Schema">
            <summary>
            Name of schema that contains the table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.Name">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.IsView">
            <summary>
            Gets a value indicating whether this instance is vie instead of a table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.Columns">
            <summary>
            Columns in the table schema.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.PrimaryKey">
            <summary>
            Gets the primary key of the table, if any.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Table.UniqueKey">
            <summary>
            Gets the unique keys of the table, if any.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Internal.ConstraintColumnUsage.Column">
            <summary>
            Gets the column this constraint belongs to.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.Domain">
            <summary>
            Represents the domain information of a user-defined data type.
            </summary>
            <nuget id="System.Data.Entity.InformationSchema" />
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Domain.Catalog">
            <summary>
            If the column is an alias data type, this column is the database name in which the user-defined data type was created. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Domain.Schema">
            <summary>
            If the column is a user-defined data type, this column returns the name of the schema of the user-defined data type. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.Domain.Name">
            <summary>
            If the column is a user-defined data type, this column is the name of the user-defined data type. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.CharacterSet.Catalog">
            <summary>
            Returns master. This indicates the database in which the character set is located, if the column is character data or text data type. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.CharacterSet.Schema">
            <summary>
            Always returns NULL. (for T-SQL)
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.CharacterSet.Name">
            <summary>
            Returns the unique name for the character set if this column is character data or text data type. Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="T:System.Data.Entity.InformationSchema.ForeignKey">
            <summary>
            Represents the unique key of a table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.ForeignKey.Name">
            <summary>
            Gets the name of the unique key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.InformationSchema.ForeignKey.Columns">
            <summary>
            Columns that make up the unique key.
            </summary>
        </member>
    </members>
</doc>
